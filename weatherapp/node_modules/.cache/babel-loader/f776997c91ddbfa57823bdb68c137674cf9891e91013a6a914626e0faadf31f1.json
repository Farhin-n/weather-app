{"ast":null,"code":"var _jsxFileName = \"/Users/marlina/Documents/GitHub/weather-app/weatherapp/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Weather from './components/weather';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n      await fetch(`${process.env.REACT_APP_API_URL}/weather?lat=${lat}&lon=${long}&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(result => {\n        setData(result);\n        console.log(result);\n      });\n    };\n    fetchData();\n  }, [lat, long]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: typeof data.main != 'undefined' ? /*#__PURE__*/_jsxDEV(Weather, {\n      weatherData: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dimmer, {\n        active: true,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          children: \"Loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gE/fZZ7pzRi/f0KiE3Gj1Ld/pxs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Weather","Dimmer","Loader","jsxDEV","_jsxDEV","App","_s","lat","setLat","long","setLong","data","setData","fetchData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","env","REACT_APP_API_URL","REACT_APP_API_KEY","then","res","json","result","console","log","className","children","main","weatherData","fileName","_jsxFileName","lineNumber","columnNumber","active","_c","$RefreshReg$"],"sources":["/Users/marlina/Documents/GitHub/weather-app/weatherapp/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Weather from './components/weather';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nfunction App() {\n\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n\n      await fetch(`${process.env.REACT_APP_API_URL}/weather?lat=${lat}&lon=${long}&appid=${process.env.REACT_APP_API_KEY}`)\n        .then(res => res.json())\n        .then(result => {\n          setData(result)\n          console.log(result);\n\n        });\n    }\n    fetchData();\n  }, [lat, long]);\n\n\n  return (\n    <div className='App'>\n      {(typeof data.main != 'undefined') ? (\n        <Weather weatherData={data} />\n      ) : (\n        <div>\n          <Dimmer active>\n            <Loader>Loading..</Loader>\n          </Dimmer>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,MAAM,EAAEC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,UAAUC,QAAQ,EAAE;QAC3DT,MAAM,CAACS,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;QAChCT,OAAO,CAACO,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC;MACpC,CAAC,CAAC;MAEF,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,gBAAejB,GAAI,QAAOE,IAAK,UAASa,OAAO,CAACC,GAAG,CAACE,iBAAkB,EAAC,CAAC,CAClHC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,MAAM,IAAI;QACdjB,OAAO,CAACiB,MAAM,CAAC;QACfC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MAErB,CAAC,CAAC;IACN,CAAC;IACDhB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,GAAG,EAAEE,IAAI,CAAC,CAAC;EAGf,oBACEL,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,EAChB,OAAOtB,IAAI,CAACuB,IAAI,IAAI,WAAW,gBAC/B9B,OAAA,CAACJ,OAAO;MAACmC,WAAW,EAAExB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE9BnC,OAAA;MAAA6B,QAAA,eACE7B,OAAA,CAACH,MAAM;QAACuC,MAAM;QAAAP,QAAA,eACZ7B,OAAA,CAACF,MAAM;UAAA+B,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjC,EAAA,CAtCQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}